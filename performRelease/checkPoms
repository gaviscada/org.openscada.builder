#!/usr/bin/python

import os
import os.path
from lxml import etree

n = '{http://maven.apache.org/POM/4.0.0}'
def find_parent_git_dir(d='.'):
    if '.git' in os.listdir(d):
        return os.path.realpath(d + '/..')
    elif os.path.realpath(d) == '/':
        return None
    else:
        return find_parent_git_dir(d + '/..')

def check_poms(d, repos):
    for repo in repos:
        for dd in os.listdir(d + '/' + repo):
            if dd.startswith('.'):
                continue
            pom_path = d + '/' + repo + '/' + dd + '/pom.xml'
            feature_path = d + '/' + repo + '/' + dd + '/feature.xml'
            print 'nano ' + os.path.realpath(pom_path)
            if os.path.exists(pom_path):
                r = etree.parse(pom_path).getroot()
                parent = r.find(n + 'parent')
                if parent is not None:
                    version = parent.findtext(n + 'version')
                    print '     Parent: %s' % version
                version = r.findtext(n + 'version')
                print '    Version: %s' % version
            if os.path.exists(feature_path):
                r = etree.parse(feature_path).getroot()
                print '    Feature: %s' % r.get('version')

def main():
    d = find_parent_git_dir()
    if d is not None:
        check_poms(d, ('org.openscada.atlantis',
                       'org.openscada.builder',
                       'org.openscada.external',
                       'org.openscada.ide',
                       'org.openscada.jinterop',
                       'org.openscada.releng',
                       'org.openscada.utgard'))

if __name__=='__main__':
    main()
